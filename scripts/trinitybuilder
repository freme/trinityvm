#!/bin/bash
set -x

cd `dirname $0`
MYPWD=${PWD}
export DATE=`date +%Y-%m-%d-%H-%M-%S`

# may be overridden with command line flag -c
export CURSESFLAG="-lncurses"

# override with -t flag
export MAKE="make"
export CONFIG="./configure"

usage() { 
  echo "Usage: $0 -i /path/to/installation" 1>&2 
  echo "-i path     path to install folder" 1>&2
  echo "-c flag     set curses flag, default: '-lncurses'" 1>&2
  echo "-C          remove all files created by previous run" 1>&2
  echo "-t          test - do not call ${MAKE} - but everything else " 1>&2
  echo "" 1>&2
  exit 1 
}

get_sources () {
if [ -z "${SRC}" ]; then usage; fi
cd ${SRC}
echo "downloading sources for GMAP-GSNAP"
nohup git clone https://github.com/julian-gehring/GMAP-GSNAP.git &
echo "downloading sources for Bowtie"
nohup git clone https://github.com/BenLangmead/bowtie.git &
echo "downloading sources for HTSlib"
nohup git clone https://github.com/samtools/htslib.git &
echo "downloading sources for SamTools"
nohup git clone https://github.com/samtools/samtools.git &
echo "downloading sources for RSEM"
nohup git clone https://github.com/bli25wisc/RSEM.git &
echo "downloading sources for Trinity RNAseq"
nohup svn checkout svn://svn.code.sf.net/p/trinityrnaseq/code/trunk trinityrnaseq-code &
echo "downloading sources for BLAT"
nohup wget http://users.soe.ucsc.edu/~kent/src/blatSrc35.zip &
wait
cat nohup.out
cd ${PTH}
echo "tar-ing up results"
tar cf trin-src-${DATE}.tar -C ${SRC} .
}








while getopts ":gGpPCtc:i:" o; do
    case "${o}" in
	c)  
	    CURSESFLAG=${OPTARG}
	    ;;
    i)
        PTH=${OPTARG}
        mkdir -p ${PTH}
        cd ${PTH}
        # make path variable an absolut path
        PTH=${PWD}
	    export APP=${PTH}/app
	    export SRC=${PTH}/src
	    export CFG=${PTH}/cfg
        mkdir ${SRC}
        mkdir ${APP}
        mkdir ${CFG}
        ;;
    C)
        if [ -d ${APP} ]; then rm -r ${APP}; fi
        if [ -d ${SRC} ]; then rm -r ${SRC}; fi
        if [ -d ${CFG} ]; then rm -r ${CFG}; fi
        [ "$(ls -A ${PTH})" ] && echo "${PTH} Not Empty" || rm -r ${PTH}
        ;;
    t)
        export MAKE="echo"
        export CONFIG="echo"
        ;;
    *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${PTH}" ]; then
    usage
fi

get_sources

########
# gmap #
########
cd ${SRC}/GMAP-GSNAP/
${CONFIG} --prefix=${APP}/gmap
${MAKE} -j
${MAKE} install

##########
# bowtie #
##########
cd ${SRC}/bowtie
${MAKE} -j
mkdir ${APP}/bowtie
cp bowtie bowtie-* ${APP}/bowtie/

############
# samtools #
############
cd ${SRC}/htslib
${MAKE} -j

cd ${SRC}/samtools/
${MAKE} LIBCURSES=${CURSESFLAG} -j
mkdir ${APP}/samtools
cp bgzip samtools ${APP}/samtools/

########
# rsem #
########
cd ${SRC}/RSEM
${MAKE} LIBCURSES=${CURSESFLAG} -j
mkdir ${APP}/rsem
cp rsem-* ${APP}/rsem/
cp convert-sam-for-rsem extract-transcript-to-gene-map-from-trinity ${APP}/rsem/

########
# blat #
########
# may be used to check validity of results
cd ${SRC}
if [ "echo" == "${MAKE}" ] 
  then echo unzip blatSrc35.zip
  else unzip blatSrc35.zip
fi
cd blatSrc
mkdir -p ${HOME}/bin/${MACHTYPE}
${MAKE} clean
${MAKE} all
mv ${HOME}/bin/${MACHTYPE} ${APP}/blat

###########
# trinity #
###########
MYPATH=${APP}/gmap/bin:${APP}/bowtie:${APP}/samtools:${APP}/rsem/:${APP}/blat
export PATH=${PATH}:${MYPATH}

cd ${SRC}
tar xzf trinityrnaseq-latest.tar.gz
cd trinityrnaseq_*
${MAKE} all
${MAKE} testall
${MAKE} testclean
export PATH=${PATH}:${PWD}


#####################################################################
CFGFILE="${CFG}/build.cfg"
echo "#!/bin/bash" >${CFGFILE}
echo "">>${CFGFILE}
echo "export PATH=\${PATH}:${MYPATH}">>${CFGFILE}
echo "export PTH=${PTH}">>${CFGFILE}
echo "export SRC=${SRC}">>${CFGFILE}
echo "export APP=${APP}">>${CFGFILE}
echo "export CFG=${CFG}">>${CFGFILE}
echo "export BLD=${MYPWD}">>${CFGFILE}
echo "export PERL_MM_USE_DEFAULT=1">>${CFGFILE}
echo "export CURSESFLAG=${CURSESFLAG}">>${CFGFILE}
echo "export BUILDDATE=${DATE}">>${CFGFILE}
echo "">>${CFGFILE}

